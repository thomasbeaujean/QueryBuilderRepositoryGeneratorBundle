
    public static function filterBy{{ column }}(QueryBuilder $qb, $value, $operator = Comparison::EQ, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        if ($value === null) {
            if (Comparison::NEQ === $operator) {
                $qb->andWhere($entityName.'.'.$columnName.' IS NOT NULL');
            } else {
                $qb->andWhere($entityName.'.'.$columnName.' IS NULL');
            }
        } else {
            //get a uniq index
            $index = static::getParameterIndex();
            $parameterName = $columnName.$index;

            $qb->andWhere($entityName.'.'.$columnName.$operator.':'.$parameterName);
            $qb->setParameter($parameterName, $value);
        }

        return $qb;
    }

    public static function filterIn{{ column }}(QueryBuilder $qb, $value, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        if ($value === null) {
            $qb->andWhere($entityName.'.'.$columnName.' IS NULL');
        } else {
            //get a uniq index
            $index = static::getParameterIndex();
            $parameterName = $columnName.$index;
            $qb->andWhere($entityName.'.'.$columnName.' IN (:'.$parameterName.')');
            $qb->setParameter($parameterName, $value);
        }

        return $qb;
    }

    public static function filterNotIn{{ column }}(QueryBuilder $qb, $value, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        if ($value === null) {
            $qb->andWhere($entityName.'.'.$columnName.' IS NOT NULL');
        } else {
            //get a uniq index
            $index = static::getParameterIndex();
            $parameterName = $columnName.$index;

            $qb->andWhere($entityName.'.'.$columnName.' NOT IN (:'.$parameterName.')');
            $qb->setParameter($parameterName, $value);
        }

        return $qb;
    }

    public function findBy{{ column }}(mixed $value): array
    {
        $qb = $this->getNewQueryBuilder();
        static::filterBy{{ column }}($qb, $value);

        return static::getQueryBuilderResult($qb);
    }

    public function findOneBy{{ column }}(
        mixed $value,
        bool $allowNull = false,
    ): ?\{{ entityClasspath }} {
        $qb = $this->getNewQueryBuilder();
        static::filterBy{{ column }}($qb, $value);

        if ($allowNull) {
            return static::getQueryBuilderOneOrNullResult($qb);
        }

        return static::getQueryBuilderSingleResult($qb);
    }

    public function existsBy{{ column }}(
        mixed $value,
    ): bool {
        $qb = $this->getNewQueryBuilder();
        static::filterBy{{ column }}($qb, $value);

        return static::existsByQueryBuilder(
            qb: $qb,
        );
    }
