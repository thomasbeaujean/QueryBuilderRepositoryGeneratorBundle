
    public static function filterBy{{ column }}(QueryBuilder $qb, $value, $operator = Comparison::EQ, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        //get a uniq index
        $index = static::getParameterIndex();
        $parameterName = $columnName.$index;

        unset($index);

        if ($value === null) {
            if (Comparison::NEQ === $operator) {
                $qb->andWhere($entityName.'.'.$columnName.' IS NOT NULL');
            } else {
                $qb->andWhere($entityName.'.'.$columnName.' IS NULL');
            }
        } else {
            $qb->andWhere($entityName.'.'.$columnName.$operator.':'.$parameterName);
{% if idType == 'uuid' %}
            // by default we use the value
            $id = $value;
            // Id is an UUID, so it might be a string, an Uuid instance, an enum, or the object
            if (is_object($value)) {
                $ref = new \ReflectionClass($value);
                if ($ref->isEnum()) {
                    $value = $value->value;
                }
            }
            if (is_string($value)) {
                $id = Uuid::fromString($value);
            }
            if ($value instanceof \{{targetEntity}}) {
                $id = $value->getId();
            }
            $qb->setParameter($parameterName, $id);
{% else %}
            $qb->setParameter($parameterName, $value->getId());
{% endif %}
        }

        return $qb;
    }

    public static function filterIn{{ column }}(QueryBuilder $qb, $values, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        //get a uniq index
        $index = static::getParameterIndex();
        $parameterName = $columnName.$index;

        unset($index);

        if ($values === null) {
            $qb->andWhere($entityName.'.'.$columnName.' IS NULL');
        } else {
            $ids = array();
            //the array might contains a null value
            $orNull = '';

            foreach ($values as $value) {
                if ($value !== null) {
                    $ids[] = $value->getId();
                } else {
                    $orNull = ' OR '.$entityName.'.'.$columnName.' IS NULL';
                }
            }

            $qb->andWhere($entityName.'.'.$columnName.' IN (:'.$parameterName.')'.$orNull);
            $qb->setParameter($parameterName, $ids);
        }

        return $qb;
    }

    public static function filterNotIn{{ column }}(QueryBuilder $qb, $values, $entityName = '{{ entityDql }}', $columnName = '{{ columnDql }}'): QueryBuilder
    {
        //get a uniq index
        $index = static::getParameterIndex();
        $parameterName = $columnName.$index;

        unset($index);

        if ($values === null) {
            $qb->andWhere($entityName.'.'.$columnName.' IS NOT NULL');
        } else {
            $ids = array();

            foreach ($values as $value) {
                $ids[] = $value->getId();
            }
            $qb->andWhere($entityName.'.'.$columnName.' NOT IN (:'.$parameterName.')');
            $qb->setParameter($parameterName, $ids);
        }

        return $qb;
    }
